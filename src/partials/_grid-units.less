/*
base
*/
.generate-columns(@n, @i: 1) when (@i =< @n) {
  .clr-u-@{i}-@{n} {
    width: (@i * 100% / @n);
  }
  .generate-columns(@n, (@i + 1));
}

@media only screen and (min-width: @sm-break)
{
	.generate-columns(@grid-units);
}
/*
sm
*/
.generate-sm-columns(@n, @i: 1) when (@i =< @n) {
  .clr-u-sm-@{i}-@{n} {
    width: (@i * 100% / @n);
  }
  .generate-sm-columns(@n, (@i + 1));
}

@media only screen and (min-width: @sm-break)
{
	.generate-sm-columns(@grid-units);
}

/*
md
*/
.generate-md-columns(@n, @i: 1) when (@i =< @n) {
  .clr-u-md-@{i}-@{n} {
    width: (@i * 100% / @n);
  }
  .generate-md-columns(@n, (@i + 1));
}

@media only screen and (min-width: @md-break)
{
	.generate-md-columns(@grid-units);
}

/*
lg
*/
.generate-lg-columns(@n, @i: 1) when (@i =< @n) {
  .clr-u-lg-@{i}-@{n} {
    width: (@i * 100% / @n);
  }
  .generate-lg-columns(@n, (@i + 1));
}

@media only screen and (min-width: @lg-break)
{
	.generate-lg-columns(@grid-units);
}

/*
xl
*/
.generate-xl-columns(@n, @i: 1) when (@i =< @n) {
  .clr-u-xl-@{i}-@{n} {
    width: (@i * 100% / @n);
  }
  .generate-xl-columns(@n, (@i + 1));
}

@media only screen and (min-width: @xl-break)
{
	.generate-xl-columns(@grid-units);
}


